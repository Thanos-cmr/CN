#include <stdio.h>
#define INFINITY 9999
#define MAX 20

int minimum(int a, int b) {
    return (a <= b) ? a : b;
}

int main() {
    int i, j, k, n, start, end;
    int adj[MAX][MAX], path[MAX][MAX];
    printf("Enter number of vertices: ");
    scanf("%d", &n);
    printf("Enter weighted adjacency matrix (0 if no edge, non-zero for weight):\n");
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            scanf("%d", &adj[i][j]);
            if (i == j)
                adj[i][j] = 0;
        }
    }
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            if (i != j && adj[i][j] == 0)
                path[i][j] = INFINITY;
            else
                path[i][j] = adj[i][j];
        }
    }
    for (k = 0; k < n; k++) {
        for (i = 0; i < n; i++) {
            for (j = 0; j < n; j++) {
                if (path[i][k] + path[k][j] < path[i][j])
                    path[i][j] = path[i][k] + path[k][j];
            }
        }
    }
    printf("\nShortest path matrix:\n");
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            if (path[i][j] == INFINITY)
                printf("%6s", "INF");
            else
                printf("%6d", path[i][j]);
        }
        printf("\n");
    }
    printf("\nEnter start vertex (0 to %d): ", n - 1);
    scanf("%d", &start);
    printf("Enter end vertex (0 to %d): ", n - 1);
    scanf("%d", &end);
    if (path[start][end] == INFINITY)
        printf("There is no path between %d and %d\n", start, end);
    else
        printf("The minimum cost between %d and %d is %d\n", start, end, path[start][end]);

    return 0;
}
